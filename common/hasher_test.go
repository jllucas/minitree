package common

import (
	"strconv"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestXORHash(t *testing.T) {
	tests := map[string]struct {
		eventA       []byte
		eventB       []byte
		expectedHash Hash
	}{
		"0 XOR 1": {[]byte{0x00}, []byte{0x01}, Hash{0x01}},
		"1 XOR 2": {[]byte{0x01}, []byte{0x02}, Hash{0x03}},
		"7 XOR 8": {[]byte{0x07}, []byte{0x08}, Hash{0x0f}},
	}

	hasher := NewXORHasher()
	for testname, test := range tests {
		computedHash := hasher.DoHash(test.eventA, test.eventB)
		assert.Equalf(t, test.expectedHash, computedHash, "Hashes don't match in test: %s", testname)
	}

}

func TestSHA256Hash(t *testing.T) {
	tests := map[string]struct {
		id           []byte
		eventA       []byte
		eventB       []byte
		expectedHash Hash
	}{
		"LeafHash (0,0)": {
			[]byte{'0'},
			[]byte(strconv.Itoa((0))),
			[]byte{},
			[]byte{0xf1, 0x53, 0x43, 0x92, 0x27, 0x9b, 0xdd, 0xbf, 0x9d, 0x43, 0xdd, 0xe8, 0x70, 0x1c, 0xb5, 0xbe, 0x14, 0xb8, 0x2f, 0x76, 0xec, 0x66, 0x7, 0xbf, 0x8d, 0x6a, 0xd5, 0x57, 0xf6, 0xf, 0x30, 0x4e}},
		"LeafHash (1,0)": {
			[]byte{'0'},
			[]byte(strconv.Itoa((1))),
			[]byte{},
			[]byte{0x93, 0x8d, 0xb8, 0xc9, 0xf8, 0x2c, 0x8c, 0xb5, 0x8d, 0x3f, 0x3e, 0xf4, 0xfd, 0x25, 0x00, 0x36, 0xa4, 0x8d, 0x26, 0xa7, 0x12, 0x75, 0x3d, 0x2f, 0xde, 0x5a, 0xbd, 0x03, 0xa8, 0x5c, 0xab, 0xf4}},
		"InteriorHash (0,1)": {
			[]byte{'1'},
			[]byte{0xf1, 0x53, 0x43, 0x92, 0x27, 0x9b, 0xdd, 0xbf, 0x9d, 0x43, 0xdd, 0xe8, 0x70, 0x1c, 0xb5, 0xbe, 0x14, 0xb8, 0x2f, 0x76, 0xec, 0x66, 0x7, 0xbf, 0x8d, 0x6a, 0xd5, 0x57, 0xf6, 0xf, 0x30, 0x4e},
			[]byte{0x93, 0x8d, 0xb8, 0xc9, 0xf8, 0x2c, 0x8c, 0xb5, 0x8d, 0x3f, 0x3e, 0xf4, 0xfd, 0x25, 0x00, 0x36, 0xa4, 0x8d, 0x26, 0xa7, 0x12, 0x75, 0x3d, 0x2f, 0xde, 0x5a, 0xbd, 0x03, 0xa8, 0x5c, 0xab, 0xf4},
			[]byte{0xfd, 0x9a, 0xf3, 0xd2, 0x89, 0xe1, 0xc7, 0xb2, 0x2c, 0x64, 0x8a, 0x4f, 0x31, 0x63, 0x81, 0xe7, 0xc, 0x63, 0xf8, 0x29, 0x4d, 0x3d, 0xc5, 0x7d, 0xbe, 0xc8, 0x2d, 0x32, 0x92, 0x40, 0x91, 0x5}},
	}

	hasher := NewSha256Hasher()
	for testname, test := range tests {
		computedHash := hasher.DoHash(test.id, test.eventA, test.eventB)
		assert.Equalf(t, test.expectedHash, computedHash, "Hashes don't match in test: %s", testname)
	}
}
